TEMPLATE = aux
include($$PWD/../config.pri) # get TARGET
DDIR = $$OUT_PWD/../$$TARGET

win32{
 makedependencies.commands = '"$$shell_path($$PWD/qmlScannerWin)"' -f "'"$$shell_path($$PWD/../privateProject/)"'" -q "'"$$shell_path($$PWD/../main/autogeneratedIncludes.qml)"'"
}
unix{
 macx {
  makedependencies.commands = '"$$shell_path($$PWD/qmlScannerMacx)"' -f "'"$$shell_path($$PWD/../privateProject/)"'" -q "'"$$shell_path($$PWD/../main/autogeneratedIncludes.qml)"'"
 }else{
  ios{
   makedependencies.commands = '"$$shell_path($$PWD/qmlScannerMacx)"' -f "'"$$shell_path($$PWD/../privateProject/)"'" -q "'"$$shell_path($$PWD/../main/autogeneratedIncludes.qml)"'"
  }
  else {
   makedependencies.commands = '"$$shell_path($$PWD/qmlScannerLinux)"' -f "'"$$shell_path($$PWD/../privateProject/)"'" -q "'"$$shell_path($$PWD/../main/autogeneratedIncludes.qml)"'"
  }
 }
}


contains(ADDZIPTORESOURCES, 'yes'):{
    rmzip.commands = $${QMAKE_DEL_FILE}  '"$$shell_path($$PWD/../main/release.zip)"'
}else{
    rmzip.commands = $${QMAKE_DEL_FILE}  '"$$shell_path($$OUT_PWD/../release.zip)"'
}
rmdir.depends = makedependencies

win32{
    rmdir.commands = $(MKDIR) '"$$shell_path($$DDIR)"' & $${QMAKE_DEL_TREE}  '"$$shell_path($$DDIR/)"'
}else{
    rmdir.commands = $${QMAKE_DEL_TREE}  '"$$shell_path($$DDIR/)"'
}

mkdir.depends = rmdir
win32{
mkdir.commands =  $(MKDIR) '"$$shell_path($$DDIR/publicLibs)"' & $(MKDIR) '"$$shell_path($$DDIR/main)"'
}else{
mkdir.commands =  $(MKDIR) '"$$shell_path($$DDIR/publicLibs)"' ; $(MKDIR) '"$$shell_path($$DDIR/main)"'
}
copy_lib.depends =mkdir
win32{
    win32:CONFIG(release, debug|release): copy_lib.commands = $(COPY_FILE) '"$$shell_path($$OUT_PWD/../privateProject/release/privateProject.lib)"' '"$$shell_path($$DDIR/main)"'
    else:win32:CONFIG(debug, debug|release): copy_lib.commands = $(COPY_FILE) '"$$shell_path( $$OUT_PWD/../privateProject/debug/privateProject.lib)"' '"$$shell_path($$DDIR/main)"'
}else{
    copy_lib.commands = $(COPY_FILE) '"$$shell_path($$OUT_PWD/../privateProject/libprivateProject)"'*.a  '"$$shell_path($$DDIR/main)"'
}

copy_pri.depends = copy_lib
copy_pri.commands =$(COPY_FILE) '"$$shell_path($$PWD/../privateProject/privateProjectQtModules.pri)"' '"$$shell_path($$DDIR/main)"'

copy_h.depends = copy_pri
copy_h.commands =$(COPY_FILE) '"$$shell_path($$PWD/../privateProject/main.h)"' '"$$shell_path($$DDIR/main)"'

copy_h2.depends =copy_h
copy_h2.commands =$(COPY_FILE) '"$$shell_path($$PWD/../config.pri)"' '"$$shell_path($$DDIR/main)"'

copy_main.depends = copy_h2
copy_main.commands = $(COPY_DIR)  '"$$shell_path($$PWD/../main/)"'* '"$$shell_path($$DDIR/main)"'


copy_publicLibs.depends = copy_main
copy_publicLibs.commands= $(COPY_DIR) '"$$shell_path($$PWD/../publicLibs/)"'* '"$$shell_path($$DDIR/publicLibs)"'


copy_subdirsProject.depends = copy_publicLibs
copy_subdirsProject.commands=$(COPY_FILE) '"$$shell_path($$PWD/../deployProject/subdirsTemplate.pro)"' '"$$shell_path($$DDIR/$$TARGET".pro")"'


zip.depends = copy_subdirsProject
contains(ADDZIPTORESOURCES, 'yes'):{
    win32{
        zip.commands='"$$shell_path($$PWD/7za.exe)"' a -mx=9 -r $$shell_path($$PWD"/../main/release.zip") $$shell_path(../$$TARGET) # ojo, esto me lo mete en el directorio home
    }else{
        #zip.commands=zip -8 -r  '"$$shell_path($$PWD/../main/release.zip)"' '"$$shell_path(../$$TARGET)"' # ojo, esto me lo mete en el directorio home
        zip.commands=cd .. ;zip -8 -r  '"$$shell_path($$PWD/../main/release.zip)"' '"$$TARGET"' # ojo, esto me lo mete en el directorio home
    }
}else{
    win32{
        zip.commands='"$$shell_path($$PWD/7za.exe)"' a -mx=9 -r  $$shell_path($$OUT_PWD"/../release.zip") $$shell_path(../$$TARGET)
    }else{
        #zip.commands=zip -7 -r  '"$$shell_path($$OUT_PWD/../release.zip)"' '"$$shell_path(../$$TARGET)"'
        zip.commands=cd .. ; zip -7 -r  release.zip '"$$TARGET"'
    }
}

contains(GENERATEZIP, 'yes'):{
 message("GENERATING ZIP FILE")
 PRE_TARGETDEPS +=      makedependencies rmzip rmdir mkdir copy_lib copy_pri copy_h copy_h2 copy_main copy_publicLibs copy_subdirsProject zip
 QMAKE_EXTRA_TARGETS += makedependencies rmzip rmdir mkdir copy_lib copy_pri copy_h copy_h2 copy_main copy_publicLibs copy_subdirsProject zip
}else{
 message("SKIPING ZIP FILE")
 PRE_TARGETDEPS +=      makedependencies rmzip rmdir
 QMAKE_EXTRA_TARGETS += makedependencies rmzip rmdir
}


DISTFILES += \
    $$PWD/subdirsTemplate.pro \
    $$PWD/qmlScanner/qmlScanner.pro \
    $$PWD/qmlScanner/qmlScannerWin.sln \
    $$PWD/qmlScanner/qmlScannerWin.vcxproj \
    $$PWD/qmlScanner/main.cpp \
    $$PWD/qmlScanner/ghc/filesystem.hpp \
    $$PWD/qmlScanner/ghc/fs_fwd.hpp \
    $$PWD/qmlScanner/ghc/fs_impl.hpp \
    $$PWD/qmlScanner/ghc/fs_std.hpp \
    $$PWD/qmlScanner/ghc/fs_std_fwd.hpp \
    $$PWD/qmlScanner/ghc/fs_std_impl.hpp \
    $$PWD/qmlScannerLinux \
    $$PWD/qmlScannerWin.exe \
    $$PWD/qmlScannerMacx \
    $$PWD/7za.dll \
    $$PWD/7zxa.dll \
    $$PWD/7za.exe









